@using Veritrade2017.Helpers
@using Veritrade2017.Models
@{
    var listPrecProm = (List<ListProductByPaises>)Model;
    decimal total = 0;
    var culture = CultureHelper.GetCurrentCulture();
    var idiomaText = culture.Equals("es") ? CultureInfoExtensions.CreateSpecificCulture("es-pe") : CultureInfoExtensions.CreateSpecificCulture("en-us");
}

<div class="row">
    <div class="col-sm-12">
        <div class="tab-detalle modal-producto">
            <div class="detalle">
                <div class="table-responsive">
                    <div class="table2">
                        <table class="table table-bordered">
                            <thead>
                                <tr class="table-title">
                                    <th class="impair-column">@ProductProfileResources.Year</th>
                                    <th class="pair-column text-center" style="width: 135px;">
                                        @ProductProfileResources.Table_Average_Price$
                                        <span class="glyphicon" aria-hidden="true">
                                            <img src="~/Content/Images/Minisite/order_arrows.png" alt="" />
                                        </span>
                                    </th>
                                    <th class="impair-column">@ProductProfileResources.Records</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var i in listPrecProm)
                                {
                                    total = i.CifOrPrecProm + total;
                                    <tr>
                                        <td class="text-center">@i.Año</td>

                                        <td class="text-center">@string.Format(idiomaText, "{0:N0}", i.CifOrPrecProm)</td>

                                        <td class="text-center">@i.RegistrosI</td>
                                    </tr>
                                }
                            </tbody>

                            <tfoot>
                                <tr class="table-title">
                                    <td class="impair-column">TOTAL</td>
                                    <td class="pair-column">
                                        @{
                                            decimal totalCom = 0;
                                            int totalReg = 0;
                                            for (int i = 0; i < listPrecProm.Count; i++)
                                            {
                                                totalCom += listPrecProm[i].CifOrPrecProm;
                                                totalReg += listPrecProm[i].RegistrosI;
                                            }
                                        }
                                        @string.Format(idiomaText, "{0:N0}", totalCom)
                                    </td>
                                    <td class="impair-column">@totalReg</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <nav aria-label="Page navigation">
        <ul class="pagination pagination-sm">
            <li>
                <a href="#" aria-label="Previous">
                    <span aria-hidden="true">«</span>
                </a>
            </li>
            @for (int i = 1; i <= 10; i++)
            {
                <li><a href="javascript:void(0);">@i</a></li>
            }
            <li>
                <a href="#" aria-label="Next">
                    <span aria-hidden="true">»</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
@*<script>
    $(document).ready(function () {

    });
</script>*@